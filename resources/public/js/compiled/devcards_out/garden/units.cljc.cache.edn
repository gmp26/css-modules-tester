;; Analyzed by ClojureScript 1.8.51
{:use-macros {defunit garden.units}, :excludes #{rem}, :name garden.units, :imports nil, :requires {cljs.reader cljs.reader, types garden.types, garden.types garden.types, util garden.util, garden.util garden.util}, :uses {CSSUnit garden.types, read-string cljs.reader}, :defs {percent {:name garden.units/percent, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 290, :column 1, :end-line 290, :end-column 17, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 290, :column 10, :end-line 290, :end-column 17}}, make-unit-divider {:protocol-inline nil, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 239, :column 7, :end-line 239, :end-column 24, :arglists (quote ([unit])), :doc "Create a division function for dividing Units."}, :name garden.units/make-unit-divider, :variadic false, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :end-column 24, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 239, :end-line 239, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit])), :doc "Create a division function for dividing Units."}, mm? {:name garden.units/mm?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 285, :column 1}, rad-div {:name garden.units/rad-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 310, :column 1}, ch+ {:name garden.units/ch+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 296, :column 1}, vmax? {:name garden.units/vmax?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 304, :column 1}, percent* {:name garden.units/percent*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 290, :column 1}, dpi-div {:name garden.units/dpi-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 325, :column 1}, s* {:name garden.units/s*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 315, :column 1}, ms {:name garden.units/ms, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 316, :column 1, :end-line 316, :end-column 12, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 316, :column 10, :end-line 316, :end-column 12}}, ms* {:name garden.units/ms*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 316, :column 1}, convertable? {:protocol-inline nil, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 122, :column 8, :end-line 122, :end-column 20, :private true, :arglists (quote ([unit])), :doc "True if unit is a key of convertable-units, false otherwise."}, :private true, :name garden.units/convertable?, :variadic false, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :end-column 20, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit])), :doc "True if unit is a key of convertable-units, false otherwise."}, dpcm+ {:name garden.units/dpcm+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 326, :column 1}, dppx* {:name garden.units/dppx*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 327, :column 1}, ch* {:name garden.units/ch*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 296, :column 1}, mm+ {:name garden.units/mm+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 285, :column 1}, rad {:name garden.units/rad, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 310, :column 1, :end-line 310, :end-column 13, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 310, :column 10, :end-line 310, :end-column 13}}, px- {:name garden.units/px-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 287, :column 1}, cm-div {:name garden.units/cm-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 284, :column 1}, turn+ {:name garden.units/turn+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 311, :column 1}, length? {:protocol-inline nil, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 42, :column 7, :end-line 42, :end-column 14, :arglists (quote ([x]))}, :name garden.units/length?, :variadic false, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, grad {:name garden.units/grad, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 309, :column 1, :end-line 309, :end-column 14, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 309, :column 10, :end-line 309, :end-column 14}}, dppx- {:name garden.units/dppx-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 327, :column 1}, percent+ {:name garden.units/percent+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 290, :column 1}, em* {:name garden.units/em*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 294, :column 1}, ms- {:name garden.units/ms-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 316, :column 1}, dpi+ {:name garden.units/dpi+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 325, :column 1}, vh+ {:name garden.units/vh+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 302, :column 1}, rad* {:name garden.units/rad*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 310, :column 1}, kHz-div {:name garden.units/kHz-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 321, :column 1}, vmax+ {:name garden.units/vmax+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 304, :column 1}, vw-div {:name garden.units/vw-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 301, :column 1}, mm- {:name garden.units/mm-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 285, :column 1}, in {:name garden.units/in, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 286, :column 1, :end-line 286, :end-column 12, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 286, :column 10, :end-line 286, :end-column 12}}, pt* {:name garden.units/pt*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 288, :column 1}, make-unit-subtractor {:protocol-inline nil, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 212, :column 7, :end-line 212, :end-column 27, :arglists (quote ([unit])), :doc "Create a subtraction function for subtracting Units."}, :name garden.units/make-unit-subtractor, :variadic false, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :end-column 27, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 212, :end-line 212, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit])), :doc "Create a subtraction function for subtracting Units."}, mm-div {:name garden.units/mm-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 285, :column 1}, vmin {:name garden.units/vmin, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 303, :column 1, :end-line 303, :end-column 14, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 303, :column 10, :end-line 303, :end-column 14}}, mm {:name garden.units/mm, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 285, :column 1, :end-line 285, :end-column 12, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 285, :column 10, :end-line 285, :end-column 12}}, em? {:name garden.units/em?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 294, :column 1}, cm? {:name garden.units/cm?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 284, :column 1}, time? {:protocol-inline nil, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 52, :column 7, :end-line 52, :end-column 12, :arglists (quote ([x]))}, :name garden.units/time?, :variadic false, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, dpi? {:name garden.units/dpi?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 325, :column 1}, make-unit-multiplier {:protocol-inline nil, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 225, :column 7, :end-line 225, :end-column 27, :arglists (quote ([unit])), :doc "Create a multiplication function for multiplying Units."}, :name garden.units/make-unit-multiplier, :variadic false, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :end-column 27, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 225, :end-line 225, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit])), :doc "Create a multiplication function for multiplying Units."}, vmin- {:name garden.units/vmin-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 303, :column 1}, unit? {:protocol-inline nil, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 37, :column 7, :end-line 37, :end-column 12, :arglists (quote ([x])), :doc "True if x is of type CSSUnit."}, :name garden.units/unit?, :variadic false, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "True if x is of type CSSUnit."}, deg-div {:name garden.units/deg-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 308, :column 1}, vw- {:name garden.units/vw-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 301, :column 1}, ch- {:name garden.units/ch-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 296, :column 1}, kHz {:name garden.units/kHz, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 321, :column 1, :end-line 321, :end-column 13, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 321, :column 10, :end-line 321, :end-column 13}}, convert {:protocol-inline nil, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 127, :column 8, :end-line 127, :end-column 15, :private true, :arglists (quote ([{m :magnitude, left :unit} right])), :doc "Convert a Unit with :unit left to a Unit with :unit right if possible."}, :private true, :name garden.units/convert, :variadic false, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :end-column 15, :method-params ([p__24168 right]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{m :magnitude, left :unit} right])), :doc "Convert a Unit with :unit left to a Unit with :unit right if possible."}, resolution? {:protocol-inline nil, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 62, :column 7, :end-line 62, :end-column 18, :arglists (quote ([x]))}, :name garden.units/resolution?, :variadic false, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ch-div {:name garden.units/ch-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 296, :column 1}, cm- {:name garden.units/cm-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 284, :column 1}, pt {:name garden.units/pt, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 288, :column 1, :end-line 288, :end-column 12, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 288, :column 10, :end-line 288, :end-column 12}}, frequency-units {:name garden.units/frequency-units, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 29, :column 1, :end-line 29, :end-column 21, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 29, :column 6, :end-line 29, :end-column 21}}, grad? {:name garden.units/grad?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 309, :column 1}, vh? {:name garden.units/vh?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 302, :column 1}, make-unit-adder {:protocol-inline nil, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 198, :column 7, :end-line 198, :end-column 22, :arglists (quote ([unit])), :doc "Create a addition function for adding Units."}, :name garden.units/make-unit-adder, :variadic false, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :end-column 22, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 198, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit])), :doc "Create a addition function for adding Units."}, vmin* {:name garden.units/vmin*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 303, :column 1}, dpcm* {:name garden.units/dpcm*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 326, :column 1}, read-unit {:protocol-inline nil, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 157, :column 7, :end-line 157, :end-column 16, :arglists (quote ([s])), :doc "Read a `CSSUnit` object from the string `s`."}, :name garden.units/read-unit, :variadic false, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :end-column 16, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Read a `CSSUnit` object from the string `s`."}, pc- {:name garden.units/pc-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 289, :column 1}, rad- {:name garden.units/rad-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 310, :column 1}, px* {:name garden.units/px*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 287, :column 1}, rem+ {:name garden.units/rem+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 297, :column 1}, Hz- {:name garden.units/Hz-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 320, :column 1}, length-units {:name garden.units/length-units, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 20, :column 1, :end-line 20, :end-column 18, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 20, :column 6, :end-line 20, :end-column 18}}, Hz+ {:name garden.units/Hz+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 320, :column 1}, pc? {:name garden.units/pc?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 289, :column 1}, pt-div {:name garden.units/pt-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 288, :column 1}, grad* {:name garden.units/grad*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 309, :column 1}, s+ {:name garden.units/s+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 315, :column 1}, vh* {:name garden.units/vh*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 302, :column 1}, s? {:name garden.units/s?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 315, :column 1}, turn-div {:name garden.units/turn-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 311, :column 1}, vh- {:name garden.units/vh-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 302, :column 1}, ex+ {:name garden.units/ex+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 295, :column 1}, em+ {:name garden.units/em+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 294, :column 1}, vmax- {:name garden.units/vmax-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 304, :column 1}, frequency? {:protocol-inline nil, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 57, :column 7, :end-line 57, :end-column 17, :arglists (quote ([x]))}, :name garden.units/frequency?, :variadic false, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, vmin+ {:name garden.units/vmin+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 303, :column 1}, deg+ {:name garden.units/deg+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 308, :column 1}, grad+ {:name garden.units/grad+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 309, :column 1}, dpi* {:name garden.units/dpi*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 325, :column 1}, pt- {:name garden.units/pt-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 288, :column 1}, deg* {:name garden.units/deg*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 308, :column 1}, vmax* {:name garden.units/vmax*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 304, :column 1}, grad- {:name garden.units/grad-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 309, :column 1}, vmin? {:name garden.units/vmin?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 303, :column 1}, Hz* {:name garden.units/Hz*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 320, :column 1}, vw+ {:name garden.units/vw+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 301, :column 1}, vw? {:name garden.units/vw?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 301, :column 1}, pt+ {:name garden.units/pt+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 288, :column 1}, in? {:name garden.units/in?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 286, :column 1}, dpcm-div {:name garden.units/dpcm-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 326, :column 1}, ex* {:name garden.units/ex*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 295, :column 1}, Hz? {:name garden.units/Hz?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 320, :column 1}, px+ {:name garden.units/px+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 287, :column 1}, s-div {:name garden.units/s-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 315, :column 1}, rem {:name garden.units/rem, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 297, :column 1, :end-line 297, :end-column 13, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 297, :column 10, :end-line 297, :end-column 13}}, em {:name garden.units/em, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 294, :column 1, :end-line 294, :end-column 12, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 294, :column 10, :end-line 294, :end-column 12}}, em-div {:name garden.units/em-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 294, :column 1}, make-unit-fn {:protocol-inline nil, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 170, :column 7, :end-line 170, :end-column 19, :arglists (quote ([unit])), :doc "Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it."}, :name garden.units/make-unit-fn, :variadic false, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :end-column 19, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 170, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit])), :doc "Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it."}, dppx {:name garden.units/dppx, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 327, :column 1, :end-line 327, :end-column 14, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 327, :column 10, :end-line 327, :end-column 14}}, px {:name garden.units/px, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 287, :column 1, :end-line 287, :end-column 12, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 287, :column 10, :end-line 287, :end-column 12}}, px? {:name garden.units/px?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 287, :column 1}, vmax-div {:name garden.units/vmax-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 304, :column 1}, rem? {:name garden.units/rem?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 297, :column 1}, vmin-div {:name garden.units/vmin-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 303, :column 1}, Hz {:name garden.units/Hz, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 320, :column 1, :end-line 320, :end-column 12, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 320, :column 10, :end-line 320, :end-column 12}}, in* {:name garden.units/in*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 286, :column 1}, dpcm {:name garden.units/dpcm, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 326, :column 1, :end-line 326, :end-column 14, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 326, :column 10, :end-line 326, :end-column 14}}, dppx+ {:name garden.units/dppx+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 327, :column 1}, ms? {:name garden.units/ms?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 316, :column 1}, pc {:name garden.units/pc, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 289, :column 1, :end-line 289, :end-column 12, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 289, :column 10, :end-line 289, :end-column 12}}, pt? {:name garden.units/pt?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 288, :column 1}, dppx-div {:name garden.units/dppx-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 327, :column 1}, kHz* {:name garden.units/kHz*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 321, :column 1}, dpi- {:name garden.units/dpi-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 325, :column 1}, px-div {:name garden.units/px-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 287, :column 1}, mm* {:name garden.units/mm*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 285, :column 1}, in- {:name garden.units/in-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 286, :column 1}, pc-div {:name garden.units/pc-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 289, :column 1}, s {:name garden.units/s, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 315, :column 1, :end-line 315, :end-column 11, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 315, :column 10, :end-line 315, :end-column 11}}, vh {:name garden.units/vh, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 302, :column 1, :end-line 302, :end-column 12, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 302, :column 10, :end-line 302, :end-column 12}}, pc* {:name garden.units/pc*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 289, :column 1}, pc+ {:name garden.units/pc+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 289, :column 1}, ms+ {:name garden.units/ms+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 316, :column 1}, kHz+ {:name garden.units/kHz+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 321, :column 1}, vw {:name garden.units/vw, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 301, :column 1, :end-line 301, :end-column 12, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 301, :column 10, :end-line 301, :end-column 12}}, deg {:name garden.units/deg, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 308, :column 1, :end-line 308, :end-column 13, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 308, :column 10, :end-line 308, :end-column 13}}, vw* {:name garden.units/vw*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 301, :column 1}, kHz- {:name garden.units/kHz-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 321, :column 1}, ch {:name garden.units/ch, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 296, :column 1, :end-line 296, :end-column 12, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 296, :column 10, :end-line 296, :end-column 12}}, angular-units {:name garden.units/angular-units, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 23, :column 1, :end-line 23, :end-column 19, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 23, :column 6, :end-line 23, :end-column 19}}, dpcm- {:name garden.units/dpcm-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 326, :column 1}, turn {:name garden.units/turn, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 311, :column 1, :end-line 311, :end-column 14, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 311, :column 10, :end-line 311, :end-column 14}}, turn- {:name garden.units/turn-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 311, :column 1}, Hz-div {:name garden.units/Hz-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 320, :column 1}, in+ {:name garden.units/in+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 286, :column 1}, dpi {:name garden.units/dpi, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 325, :column 1, :end-line 325, :end-column 13, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 325, :column 10, :end-line 325, :end-column 13}}, cm {:name garden.units/cm, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 284, :column 1, :end-line 284, :end-column 12, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 284, :column 10, :end-line 284, :end-column 12}}, cm* {:name garden.units/cm*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 284, :column 1}, angle? {:protocol-inline nil, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 47, :column 7, :end-line 47, :end-column 13, :arglists (quote ([x]))}, :name garden.units/angle?, :variadic false, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ex? {:name garden.units/ex?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 295, :column 1}, grad-div {:name garden.units/grad-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 309, :column 1}, rem- {:name garden.units/rem-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 297, :column 1}, deg? {:name garden.units/deg?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 308, :column 1}, ms-div {:name garden.units/ms-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 316, :column 1}, s- {:name garden.units/s-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 315, :column 1}, resolution-units {:name garden.units/resolution-units, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 32, :column 1, :end-line 32, :end-column 22, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 32, :column 6, :end-line 32, :end-column 22}}, cm+ {:name garden.units/cm+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 284, :column 1}, ex {:name garden.units/ex, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 295, :column 1, :end-line 295, :end-column 12, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 295, :column 10, :end-line 295, :end-column 12}}, dpcm? {:name garden.units/dpcm?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 326, :column 1}, rem* {:name garden.units/rem*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 297, :column 1}, ch? {:name garden.units/ch?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 296, :column 1}, kHz? {:name garden.units/kHz?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 321, :column 1}, rem-div {:name garden.units/rem-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 297, :column 1}, conversions {:name garden.units/conversions, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 69, :column 1, :end-line 71, :end-column 14, :private true, :doc "Map associating CSS unit types to their conversion values.", :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 71, :column 3, :end-line 71, :end-column 14, :private true, :doc "Map associating CSS unit types to their conversion values."}}, dppx? {:name garden.units/dppx?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 327, :column 1}, percent-div {:name garden.units/percent-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 290, :column 1}, deg- {:name garden.units/deg-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 308, :column 1}, rad? {:name garden.units/rad?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 310, :column 1}, percent- {:name garden.units/percent-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 290, :column 1}, turn* {:name garden.units/turn*, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 311, :column 1}, time-units {:name garden.units/time-units, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 26, :column 1, :end-line 26, :end-column 16, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 26, :column 6, :end-line 26, :end-column 16}}, make-unit-predicate {:protocol-inline nil, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 165, :column 7, :end-line 165, :end-column 26, :arglists (quote ([unit])), :doc "Creates a function for verifying the given unit type."}, :name garden.units/make-unit-predicate, :variadic false, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :end-column 26, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit])), :doc "Creates a function for verifying the given unit type."}, in-div {:name garden.units/in-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 286, :column 1}, ex-div {:name garden.units/ex-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 295, :column 1}, turn? {:name garden.units/turn?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 311, :column 1}, unit-re {:name garden.units/unit-re, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 151, :column 1, :end-line 154, :end-column 10, :doc "Regular expression for matching a CSS unit. The magnitude\n             and unit are captured.", :private true, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 154, :column 3, :end-line 154, :end-column 10, :doc "Regular expression for matching a CSS unit. The magnitude\n             and unit are captured.", :private true}}, vh-div {:name garden.units/vh-div, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 302, :column 1}, percent? {:name garden.units/percent?, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 290, :column 1}, rad+ {:name garden.units/rad+, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 310, :column 1}, vmax {:name garden.units/vmax, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 304, :column 1, :end-line 304, :end-column 14, :meta {:file "/Users/gmp26/clojure/css-modules-tester/resources/public/js/compiled/devcards_out/garden/units.cljc", :line 304, :column 10, :end-line 304, :end-column 14}}, em- {:name garden.units/em-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 294, :column 1}, ex- {:name garden.units/ex-, :meta {:file nil}, :file "resources/public/js/compiled/devcards_out/garden/units.cljc", :line 295, :column 1}}, :require-macros {garden.units garden.units}, :cljs.analyzer/constants {:seen #{:mm :vmin :kHz :given :pt :else :unit :% :px :rem :em :dppx :dpcm :type :Hz :pc :magnitude :vh :s :ch :vw :deg :dpi :cm :turn :ex :vmax :ms :rad :grad :in}, :order [:mm :pt :px :pc :cm :in :deg :turn :rad :grad :s :ms :kHz :Hz :dppx :dpcm :dpi :unit :rem :em :magnitude :else :given :type :% :ex :ch :vw :vh :vmin :vmax]}, :doc "Functions and macros for working with CSS units."}